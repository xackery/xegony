// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/npc.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Npc struct {
	ID                   int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	LastName             string  `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Level                int64   `protobuf:"varint,4,opt,name=Level,proto3" json:"Level,omitempty"`
	RaceID               int64   `protobuf:"varint,5,opt,name=RaceID,proto3" json:"RaceID,omitempty"`
	ClassID              int64   `protobuf:"varint,6,opt,name=ClassID,proto3" json:"ClassID,omitempty"`
	BodyTypeID           int64   `protobuf:"varint,7,opt,name=BodyTypeID,proto3" json:"BodyTypeID,omitempty"`
	Hitpoints            int64   `protobuf:"varint,8,opt,name=Hitpoints,proto3" json:"Hitpoints,omitempty"`
	Mana                 int64   `protobuf:"varint,9,opt,name=Mana,proto3" json:"Mana,omitempty"`
	Gender               int64   `protobuf:"varint,10,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Texture              int64   `protobuf:"varint,11,opt,name=Texture,proto3" json:"Texture,omitempty"`
	HelmTexture          int64   `protobuf:"varint,12,opt,name=HelmTexture,proto3" json:"HelmTexture,omitempty"`
	HerosForgeModel      int64   `protobuf:"varint,13,opt,name=HerosForgeModel,proto3" json:"HerosForgeModel,omitempty"`
	Size                 float32 `protobuf:"fixed32,14,opt,name=Size,proto3" json:"Size,omitempty"`
	HpRegenRate          int64   `protobuf:"varint,15,opt,name=HpRegenRate,proto3" json:"HpRegenRate,omitempty"`
	ManaRegenRate        int64   `protobuf:"varint,16,opt,name=ManaRegenRate,proto3" json:"ManaRegenRate,omitempty"`
	LootID               int64   `protobuf:"varint,17,opt,name=LootID,proto3" json:"LootID,omitempty"`
	MerchantID           int64   `protobuf:"varint,18,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	AltCurrencyID        int64   `protobuf:"varint,19,opt,name=AltCurrencyID,proto3" json:"AltCurrencyID,omitempty"`
	NpcSpellsID          int64   `protobuf:"varint,20,opt,name=NpcSpellsID,proto3" json:"NpcSpellsID,omitempty"`
	NpcSpellsEffectsID   int64   `protobuf:"varint,21,opt,name=NpcSpellsEffectsID,proto3" json:"NpcSpellsEffectsID,omitempty"`
	NpcFactionID         int64   `protobuf:"varint,22,opt,name=NpcFactionID,proto3" json:"NpcFactionID,omitempty"`
	AdventureTemplateID  int64   `protobuf:"varint,23,opt,name=AdventureTemplateID,proto3" json:"AdventureTemplateID,omitempty"`
	TrapTemplate         int64   `protobuf:"varint,24,opt,name=TrapTemplate,proto3" json:"TrapTemplate,omitempty"`
	MininumDamage        int64   `protobuf:"varint,25,opt,name=MininumDamage,proto3" json:"MininumDamage,omitempty"`
	MaximumDamage        int64   `protobuf:"varint,26,opt,name=MaximumDamage,proto3" json:"MaximumDamage,omitempty"`
	AttackCount          int64   `protobuf:"varint,27,opt,name=AttackCount,proto3" json:"AttackCount,omitempty"`
	NpcSpecialAttacks    string  `protobuf:"bytes,28,opt,name=NpcSpecialAttacks,proto3" json:"NpcSpecialAttacks,omitempty"`
	SpecialAbilitiesRaw  string  `protobuf:"bytes,29,opt,name=SpecialAbilitiesRaw,proto3" json:"SpecialAbilitiesRaw,omitempty"`
	AggroRadius          int64   `protobuf:"varint,30,opt,name=AggroRadius,proto3" json:"AggroRadius,omitempty"`
	AssistRadius         int64   `protobuf:"varint,31,opt,name=AssistRadius,proto3" json:"AssistRadius,omitempty"`
	Face                 int64   `protobuf:"varint,32,opt,name=Face,proto3" json:"Face,omitempty"`
	LuclinHairStyle      int64   `protobuf:"varint,33,opt,name=LuclinHairStyle,proto3" json:"LuclinHairStyle,omitempty"`
	LuclinHairColor      int64   `protobuf:"varint,34,opt,name=LuclinHairColor,proto3" json:"LuclinHairColor,omitempty"`
	LuclinEyeColor       int64   `protobuf:"varint,35,opt,name=LuclinEyeColor,proto3" json:"LuclinEyeColor,omitempty"`
	LuclinEyeColor2      int64   `protobuf:"varint,36,opt,name=LuclinEyeColor2,proto3" json:"LuclinEyeColor2,omitempty"`
	LuclinBeardColor     int64   `protobuf:"varint,37,opt,name=LuclinBeardColor,proto3" json:"LuclinBeardColor,omitempty"`
	LuclinBeard          int64   `protobuf:"varint,38,opt,name=LuclinBeard,proto3" json:"LuclinBeard,omitempty"`
	DrakkinHeritage      int64   `protobuf:"varint,39,opt,name=DrakkinHeritage,proto3" json:"DrakkinHeritage,omitempty"`
	DrakkinTattoo        int64   `protobuf:"varint,40,opt,name=DrakkinTattoo,proto3" json:"DrakkinTattoo,omitempty"`
	DrakkinDetails       int64   `protobuf:"varint,41,opt,name=DrakkinDetails,proto3" json:"DrakkinDetails,omitempty"`
	ArmorTintID          int64   `protobuf:"varint,42,opt,name=ArmorTintID,proto3" json:"ArmorTintID,omitempty"`
	ArmorTintRed         int64   `protobuf:"varint,43,opt,name=ArmorTintRed,proto3" json:"ArmorTintRed,omitempty"`
	ArmorTintGreen       int64   `protobuf:"varint,44,opt,name=ArmorTintGreen,proto3" json:"ArmorTintGreen,omitempty"`
	ArmorTintBlue        int64   `protobuf:"varint,45,opt,name=ArmorTintBlue,proto3" json:"ArmorTintBlue,omitempty"`
	DMeleeTexture1       int64   `protobuf:"varint,46,opt,name=DMeleeTexture1,proto3" json:"DMeleeTexture1,omitempty"`
	DMeleeTexture2       int64   `protobuf:"varint,47,opt,name=DMeleeTexture2,proto3" json:"DMeleeTexture2,omitempty"`
	AmmoIDFile           string  `protobuf:"bytes,48,opt,name=AmmoIDFile,proto3" json:"AmmoIDFile,omitempty"`
	PrimaryMeleeTypeID   int64   `protobuf:"varint,49,opt,name=PrimaryMeleeTypeID,proto3" json:"PrimaryMeleeTypeID,omitempty"`
	SecondaryMeleeTypeID int64   `protobuf:"varint,50,opt,name=SecondaryMeleeTypeID,proto3" json:"SecondaryMeleeTypeID,omitempty"`
	RangedTypeID         int64   `protobuf:"varint,51,opt,name=RangedTypeID,proto3" json:"RangedTypeID,omitempty"`
	Runspeed             float32 `protobuf:"fixed32,52,opt,name=Runspeed,proto3" json:"Runspeed,omitempty"`
	MagicResistance      int64   `protobuf:"varint,53,opt,name=MagicResistance,proto3" json:"MagicResistance,omitempty"`
	ColdResistance       int64   `protobuf:"varint,54,opt,name=ColdResistance,proto3" json:"ColdResistance,omitempty"`
	DiseaseResistance    int64   `protobuf:"varint,55,opt,name=DiseaseResistance,proto3" json:"DiseaseResistance,omitempty"`
	FireResistance       int64   `protobuf:"varint,56,opt,name=FireResistance,proto3" json:"FireResistance,omitempty"`
	PoisonResistance     int64   `protobuf:"varint,57,opt,name=PoisonResistance,proto3" json:"PoisonResistance,omitempty"`
	CorruptionResistance int64   `protobuf:"varint,58,opt,name=CorruptionResistance,proto3" json:"CorruptionResistance,omitempty"`
	PhysicalResistance   int64   `protobuf:"varint,59,opt,name=PhysicalResistance,proto3" json:"PhysicalResistance,omitempty"`
	SeeInvisible         int64   `protobuf:"varint,60,opt,name=SeeInvisible,proto3" json:"SeeInvisible,omitempty"`
	SeeInvisibleUndead   int64   `protobuf:"varint,61,opt,name=SeeInvisibleUndead,proto3" json:"SeeInvisibleUndead,omitempty"`
	QuestGlobal          int64   `protobuf:"varint,62,opt,name=QuestGlobal,proto3" json:"QuestGlobal,omitempty"`
	ArmorClass           int64   `protobuf:"varint,63,opt,name=ArmorClass,proto3" json:"ArmorClass,omitempty"`
	NpcAggro             int64   `protobuf:"varint,64,opt,name=NpcAggro,proto3" json:"NpcAggro,omitempty"`
	SpawnLimit           int64   `protobuf:"varint,65,opt,name=SpawnLimit,proto3" json:"SpawnLimit,omitempty"`
	AttackSpeed          float32 `protobuf:"fixed32,66,opt,name=AttackSpeed,proto3" json:"AttackSpeed,omitempty"`
	AttackDelay          int64   `protobuf:"varint,67,opt,name=AttackDelay,proto3" json:"AttackDelay,omitempty"`
	Findable             int64   `protobuf:"varint,68,opt,name=Findable,proto3" json:"Findable,omitempty"`
	Strength             int64   `protobuf:"varint,69,opt,name=Strength,proto3" json:"Strength,omitempty"`
	Stamina              int64   `protobuf:"varint,70,opt,name=Stamina,proto3" json:"Stamina,omitempty"`
	Dexterity            int64   `protobuf:"varint,71,opt,name=Dexterity,proto3" json:"Dexterity,omitempty"`
	Agility              int64   `protobuf:"varint,72,opt,name=Agility,proto3" json:"Agility,omitempty"`
	Intelligence         int64   `protobuf:"varint,73,opt,name=Intelligence,proto3" json:"Intelligence,omitempty"`
	Wisdom               int64   `protobuf:"varint,74,opt,name=Wisdom,proto3" json:"Wisdom,omitempty"`
	Charisma             int64   `protobuf:"varint,75,opt,name=Charisma,proto3" json:"Charisma,omitempty"`
	SeeHide              int64   `protobuf:"varint,76,opt,name=SeeHide,proto3" json:"SeeHide,omitempty"`
	SeeImprovedHide      int64   `protobuf:"varint,77,opt,name=SeeImprovedHide,proto3" json:"SeeImprovedHide,omitempty"`
	Trackable            int64   `protobuf:"varint,78,opt,name=Trackable,proto3" json:"Trackable,omitempty"`
	IsBot                int64   `protobuf:"varint,79,opt,name=IsBot,proto3" json:"IsBot,omitempty"`
	Exclude              int64   `protobuf:"varint,80,opt,name=Exclude,proto3" json:"Exclude,omitempty"`
	Attack               int64   `protobuf:"varint,81,opt,name=Attack,proto3" json:"Attack,omitempty"`
	Accuracy             int64   `protobuf:"varint,82,opt,name=Accuracy,proto3" json:"Accuracy,omitempty"`
	Avoidance            int64   `protobuf:"varint,83,opt,name=Avoidance,proto3" json:"Avoidance,omitempty"`
	SlowMitigation       int64   `protobuf:"varint,84,opt,name=SlowMitigation,proto3" json:"SlowMitigation,omitempty"`
	Version              int64   `protobuf:"varint,85,opt,name=Version,proto3" json:"Version,omitempty"`
	MaxLevel             int64   `protobuf:"varint,86,opt,name=MaxLevel,proto3" json:"MaxLevel,omitempty"`
	ScaleRate            int64   `protobuf:"varint,87,opt,name=ScaleRate,proto3" json:"ScaleRate,omitempty"`
	PrivateCorpse        int64   `protobuf:"varint,88,opt,name=PrivateCorpse,proto3" json:"PrivateCorpse,omitempty"`
	UniqueSpawnByName    int64   `protobuf:"varint,89,opt,name=UniqueSpawnByName,proto3" json:"UniqueSpawnByName,omitempty"`
	Underwater           int64   `protobuf:"varint,90,opt,name=Underwater,proto3" json:"Underwater,omitempty"`
	IsQuest              int64   `protobuf:"varint,91,opt,name=IsQuest,proto3" json:"IsQuest,omitempty"`
	EmoteID              int64   `protobuf:"varint,92,opt,name=EmoteID,proto3" json:"EmoteID,omitempty"`
	SpellScale           float32 `protobuf:"fixed32,93,opt,name=SpellScale,proto3" json:"SpellScale,omitempty"`
	HealScale            float32 `protobuf:"fixed32,94,opt,name=HealScale,proto3" json:"HealScale,omitempty"`
	NoTargetHotkey       int64   `protobuf:"varint,95,opt,name=NoTargetHotkey,proto3" json:"NoTargetHotkey,omitempty"`
	RaidTarget           int64   `protobuf:"varint,96,opt,name=RaidTarget,proto3" json:"RaidTarget,omitempty"`
	ArmTexture           int64   `protobuf:"varint,97,opt,name=ArmTexture,proto3" json:"ArmTexture,omitempty"`
	BracerTexture        int64   `protobuf:"varint,98,opt,name=BracerTexture,proto3" json:"BracerTexture,omitempty"`
	HandTexture          int64   `protobuf:"varint,99,opt,name=HandTexture,proto3" json:"HandTexture,omitempty"`
	LegTexture           int64   `protobuf:"varint,100,opt,name=LegTexture,proto3" json:"LegTexture,omitempty"`
	FeetTexture          int64   `protobuf:"varint,101,opt,name=FeetTexture,proto3" json:"FeetTexture,omitempty"`
	Light                int64   `protobuf:"varint,102,opt,name=Light,proto3" json:"Light,omitempty"`
	WalkSpeed            int64   `protobuf:"varint,103,opt,name=WalkSpeed,proto3" json:"WalkSpeed,omitempty"`
	PeqID                int64   `protobuf:"varint,104,opt,name=PeqID,proto3" json:"PeqID,omitempty"`
	Unique               int64   `protobuf:"varint,105,opt,name=Unique,proto3" json:"Unique,omitempty"`
	Fixed                int64   `protobuf:"varint,106,opt,name=Fixed,proto3" json:"Fixed,omitempty"`
	IgnoreDespawn        int64   `protobuf:"varint,107,opt,name=IgnoreDespawn,proto3" json:"IgnoreDespawn,omitempty"`
	ShowName             int64   `protobuf:"varint,108,opt,name=ShowName,proto3" json:"ShowName,omitempty"`
	Untargetable         int64   `protobuf:"varint,109,opt,name=Untargetable,proto3" json:"Untargetable,omitempty"`
	// New, non-field mapped identified elements
	Race                 *Race    `protobuf:"bytes,110,opt,name=race,proto3" json:"race,omitempty"`
	Class                *Class   `protobuf:"bytes,111,opt,name=class,proto3" json:"class,omitempty"`
	CleanName            string   `protobuf:"bytes,112,opt,name=clean_name,json=cleanName,proto3" json:"clean_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Npc) Reset()         { *m = Npc{} }
func (m *Npc) String() string { return proto.CompactTextString(m) }
func (*Npc) ProtoMessage()    {}
func (*Npc) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{0}
}

func (m *Npc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Npc.Unmarshal(m, b)
}
func (m *Npc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Npc.Marshal(b, m, deterministic)
}
func (m *Npc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Npc.Merge(m, src)
}
func (m *Npc) XXX_Size() int {
	return xxx_messageInfo_Npc.Size(m)
}
func (m *Npc) XXX_DiscardUnknown() {
	xxx_messageInfo_Npc.DiscardUnknown(m)
}

var xxx_messageInfo_Npc proto.InternalMessageInfo

func (m *Npc) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Npc) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Npc) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Npc) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Npc) GetRaceID() int64 {
	if m != nil {
		return m.RaceID
	}
	return 0
}

func (m *Npc) GetClassID() int64 {
	if m != nil {
		return m.ClassID
	}
	return 0
}

func (m *Npc) GetBodyTypeID() int64 {
	if m != nil {
		return m.BodyTypeID
	}
	return 0
}

func (m *Npc) GetHitpoints() int64 {
	if m != nil {
		return m.Hitpoints
	}
	return 0
}

func (m *Npc) GetMana() int64 {
	if m != nil {
		return m.Mana
	}
	return 0
}

func (m *Npc) GetGender() int64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *Npc) GetTexture() int64 {
	if m != nil {
		return m.Texture
	}
	return 0
}

func (m *Npc) GetHelmTexture() int64 {
	if m != nil {
		return m.HelmTexture
	}
	return 0
}

func (m *Npc) GetHerosForgeModel() int64 {
	if m != nil {
		return m.HerosForgeModel
	}
	return 0
}

func (m *Npc) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Npc) GetHpRegenRate() int64 {
	if m != nil {
		return m.HpRegenRate
	}
	return 0
}

func (m *Npc) GetManaRegenRate() int64 {
	if m != nil {
		return m.ManaRegenRate
	}
	return 0
}

func (m *Npc) GetLootID() int64 {
	if m != nil {
		return m.LootID
	}
	return 0
}

func (m *Npc) GetMerchantID() int64 {
	if m != nil {
		return m.MerchantID
	}
	return 0
}

func (m *Npc) GetAltCurrencyID() int64 {
	if m != nil {
		return m.AltCurrencyID
	}
	return 0
}

func (m *Npc) GetNpcSpellsID() int64 {
	if m != nil {
		return m.NpcSpellsID
	}
	return 0
}

func (m *Npc) GetNpcSpellsEffectsID() int64 {
	if m != nil {
		return m.NpcSpellsEffectsID
	}
	return 0
}

func (m *Npc) GetNpcFactionID() int64 {
	if m != nil {
		return m.NpcFactionID
	}
	return 0
}

func (m *Npc) GetAdventureTemplateID() int64 {
	if m != nil {
		return m.AdventureTemplateID
	}
	return 0
}

func (m *Npc) GetTrapTemplate() int64 {
	if m != nil {
		return m.TrapTemplate
	}
	return 0
}

func (m *Npc) GetMininumDamage() int64 {
	if m != nil {
		return m.MininumDamage
	}
	return 0
}

func (m *Npc) GetMaximumDamage() int64 {
	if m != nil {
		return m.MaximumDamage
	}
	return 0
}

func (m *Npc) GetAttackCount() int64 {
	if m != nil {
		return m.AttackCount
	}
	return 0
}

func (m *Npc) GetNpcSpecialAttacks() string {
	if m != nil {
		return m.NpcSpecialAttacks
	}
	return ""
}

func (m *Npc) GetSpecialAbilitiesRaw() string {
	if m != nil {
		return m.SpecialAbilitiesRaw
	}
	return ""
}

func (m *Npc) GetAggroRadius() int64 {
	if m != nil {
		return m.AggroRadius
	}
	return 0
}

func (m *Npc) GetAssistRadius() int64 {
	if m != nil {
		return m.AssistRadius
	}
	return 0
}

func (m *Npc) GetFace() int64 {
	if m != nil {
		return m.Face
	}
	return 0
}

func (m *Npc) GetLuclinHairStyle() int64 {
	if m != nil {
		return m.LuclinHairStyle
	}
	return 0
}

func (m *Npc) GetLuclinHairColor() int64 {
	if m != nil {
		return m.LuclinHairColor
	}
	return 0
}

func (m *Npc) GetLuclinEyeColor() int64 {
	if m != nil {
		return m.LuclinEyeColor
	}
	return 0
}

func (m *Npc) GetLuclinEyeColor2() int64 {
	if m != nil {
		return m.LuclinEyeColor2
	}
	return 0
}

func (m *Npc) GetLuclinBeardColor() int64 {
	if m != nil {
		return m.LuclinBeardColor
	}
	return 0
}

func (m *Npc) GetLuclinBeard() int64 {
	if m != nil {
		return m.LuclinBeard
	}
	return 0
}

func (m *Npc) GetDrakkinHeritage() int64 {
	if m != nil {
		return m.DrakkinHeritage
	}
	return 0
}

func (m *Npc) GetDrakkinTattoo() int64 {
	if m != nil {
		return m.DrakkinTattoo
	}
	return 0
}

func (m *Npc) GetDrakkinDetails() int64 {
	if m != nil {
		return m.DrakkinDetails
	}
	return 0
}

func (m *Npc) GetArmorTintID() int64 {
	if m != nil {
		return m.ArmorTintID
	}
	return 0
}

func (m *Npc) GetArmorTintRed() int64 {
	if m != nil {
		return m.ArmorTintRed
	}
	return 0
}

func (m *Npc) GetArmorTintGreen() int64 {
	if m != nil {
		return m.ArmorTintGreen
	}
	return 0
}

func (m *Npc) GetArmorTintBlue() int64 {
	if m != nil {
		return m.ArmorTintBlue
	}
	return 0
}

func (m *Npc) GetDMeleeTexture1() int64 {
	if m != nil {
		return m.DMeleeTexture1
	}
	return 0
}

func (m *Npc) GetDMeleeTexture2() int64 {
	if m != nil {
		return m.DMeleeTexture2
	}
	return 0
}

func (m *Npc) GetAmmoIDFile() string {
	if m != nil {
		return m.AmmoIDFile
	}
	return ""
}

func (m *Npc) GetPrimaryMeleeTypeID() int64 {
	if m != nil {
		return m.PrimaryMeleeTypeID
	}
	return 0
}

func (m *Npc) GetSecondaryMeleeTypeID() int64 {
	if m != nil {
		return m.SecondaryMeleeTypeID
	}
	return 0
}

func (m *Npc) GetRangedTypeID() int64 {
	if m != nil {
		return m.RangedTypeID
	}
	return 0
}

func (m *Npc) GetRunspeed() float32 {
	if m != nil {
		return m.Runspeed
	}
	return 0
}

func (m *Npc) GetMagicResistance() int64 {
	if m != nil {
		return m.MagicResistance
	}
	return 0
}

func (m *Npc) GetColdResistance() int64 {
	if m != nil {
		return m.ColdResistance
	}
	return 0
}

func (m *Npc) GetDiseaseResistance() int64 {
	if m != nil {
		return m.DiseaseResistance
	}
	return 0
}

func (m *Npc) GetFireResistance() int64 {
	if m != nil {
		return m.FireResistance
	}
	return 0
}

func (m *Npc) GetPoisonResistance() int64 {
	if m != nil {
		return m.PoisonResistance
	}
	return 0
}

func (m *Npc) GetCorruptionResistance() int64 {
	if m != nil {
		return m.CorruptionResistance
	}
	return 0
}

func (m *Npc) GetPhysicalResistance() int64 {
	if m != nil {
		return m.PhysicalResistance
	}
	return 0
}

func (m *Npc) GetSeeInvisible() int64 {
	if m != nil {
		return m.SeeInvisible
	}
	return 0
}

func (m *Npc) GetSeeInvisibleUndead() int64 {
	if m != nil {
		return m.SeeInvisibleUndead
	}
	return 0
}

func (m *Npc) GetQuestGlobal() int64 {
	if m != nil {
		return m.QuestGlobal
	}
	return 0
}

func (m *Npc) GetArmorClass() int64 {
	if m != nil {
		return m.ArmorClass
	}
	return 0
}

func (m *Npc) GetNpcAggro() int64 {
	if m != nil {
		return m.NpcAggro
	}
	return 0
}

func (m *Npc) GetSpawnLimit() int64 {
	if m != nil {
		return m.SpawnLimit
	}
	return 0
}

func (m *Npc) GetAttackSpeed() float32 {
	if m != nil {
		return m.AttackSpeed
	}
	return 0
}

func (m *Npc) GetAttackDelay() int64 {
	if m != nil {
		return m.AttackDelay
	}
	return 0
}

func (m *Npc) GetFindable() int64 {
	if m != nil {
		return m.Findable
	}
	return 0
}

func (m *Npc) GetStrength() int64 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *Npc) GetStamina() int64 {
	if m != nil {
		return m.Stamina
	}
	return 0
}

func (m *Npc) GetDexterity() int64 {
	if m != nil {
		return m.Dexterity
	}
	return 0
}

func (m *Npc) GetAgility() int64 {
	if m != nil {
		return m.Agility
	}
	return 0
}

func (m *Npc) GetIntelligence() int64 {
	if m != nil {
		return m.Intelligence
	}
	return 0
}

func (m *Npc) GetWisdom() int64 {
	if m != nil {
		return m.Wisdom
	}
	return 0
}

func (m *Npc) GetCharisma() int64 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *Npc) GetSeeHide() int64 {
	if m != nil {
		return m.SeeHide
	}
	return 0
}

func (m *Npc) GetSeeImprovedHide() int64 {
	if m != nil {
		return m.SeeImprovedHide
	}
	return 0
}

func (m *Npc) GetTrackable() int64 {
	if m != nil {
		return m.Trackable
	}
	return 0
}

func (m *Npc) GetIsBot() int64 {
	if m != nil {
		return m.IsBot
	}
	return 0
}

func (m *Npc) GetExclude() int64 {
	if m != nil {
		return m.Exclude
	}
	return 0
}

func (m *Npc) GetAttack() int64 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Npc) GetAccuracy() int64 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *Npc) GetAvoidance() int64 {
	if m != nil {
		return m.Avoidance
	}
	return 0
}

func (m *Npc) GetSlowMitigation() int64 {
	if m != nil {
		return m.SlowMitigation
	}
	return 0
}

func (m *Npc) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Npc) GetMaxLevel() int64 {
	if m != nil {
		return m.MaxLevel
	}
	return 0
}

func (m *Npc) GetScaleRate() int64 {
	if m != nil {
		return m.ScaleRate
	}
	return 0
}

func (m *Npc) GetPrivateCorpse() int64 {
	if m != nil {
		return m.PrivateCorpse
	}
	return 0
}

func (m *Npc) GetUniqueSpawnByName() int64 {
	if m != nil {
		return m.UniqueSpawnByName
	}
	return 0
}

func (m *Npc) GetUnderwater() int64 {
	if m != nil {
		return m.Underwater
	}
	return 0
}

func (m *Npc) GetIsQuest() int64 {
	if m != nil {
		return m.IsQuest
	}
	return 0
}

func (m *Npc) GetEmoteID() int64 {
	if m != nil {
		return m.EmoteID
	}
	return 0
}

func (m *Npc) GetSpellScale() float32 {
	if m != nil {
		return m.SpellScale
	}
	return 0
}

func (m *Npc) GetHealScale() float32 {
	if m != nil {
		return m.HealScale
	}
	return 0
}

func (m *Npc) GetNoTargetHotkey() int64 {
	if m != nil {
		return m.NoTargetHotkey
	}
	return 0
}

func (m *Npc) GetRaidTarget() int64 {
	if m != nil {
		return m.RaidTarget
	}
	return 0
}

func (m *Npc) GetArmTexture() int64 {
	if m != nil {
		return m.ArmTexture
	}
	return 0
}

func (m *Npc) GetBracerTexture() int64 {
	if m != nil {
		return m.BracerTexture
	}
	return 0
}

func (m *Npc) GetHandTexture() int64 {
	if m != nil {
		return m.HandTexture
	}
	return 0
}

func (m *Npc) GetLegTexture() int64 {
	if m != nil {
		return m.LegTexture
	}
	return 0
}

func (m *Npc) GetFeetTexture() int64 {
	if m != nil {
		return m.FeetTexture
	}
	return 0
}

func (m *Npc) GetLight() int64 {
	if m != nil {
		return m.Light
	}
	return 0
}

func (m *Npc) GetWalkSpeed() int64 {
	if m != nil {
		return m.WalkSpeed
	}
	return 0
}

func (m *Npc) GetPeqID() int64 {
	if m != nil {
		return m.PeqID
	}
	return 0
}

func (m *Npc) GetUnique() int64 {
	if m != nil {
		return m.Unique
	}
	return 0
}

func (m *Npc) GetFixed() int64 {
	if m != nil {
		return m.Fixed
	}
	return 0
}

func (m *Npc) GetIgnoreDespawn() int64 {
	if m != nil {
		return m.IgnoreDespawn
	}
	return 0
}

func (m *Npc) GetShowName() int64 {
	if m != nil {
		return m.ShowName
	}
	return 0
}

func (m *Npc) GetUntargetable() int64 {
	if m != nil {
		return m.Untargetable
	}
	return 0
}

func (m *Npc) GetRace() *Race {
	if m != nil {
		return m.Race
	}
	return nil
}

func (m *Npc) GetClass() *Class {
	if m != nil {
		return m.Class
	}
	return nil
}

func (m *Npc) GetCleanName() string {
	if m != nil {
		return m.CleanName
	}
	return ""
}

type NpcSearchRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string   `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDesc            bool     `protobuf:"varint,5,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcSearchRequest) Reset()         { *m = NpcSearchRequest{} }
func (m *NpcSearchRequest) String() string { return proto.CompactTextString(m) }
func (*NpcSearchRequest) ProtoMessage()    {}
func (*NpcSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{1}
}

func (m *NpcSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcSearchRequest.Unmarshal(m, b)
}
func (m *NpcSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcSearchRequest.Marshal(b, m, deterministic)
}
func (m *NpcSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcSearchRequest.Merge(m, src)
}
func (m *NpcSearchRequest) XXX_Size() int {
	return xxx_messageInfo_NpcSearchRequest.Size(m)
}
func (m *NpcSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcSearchRequest proto.InternalMessageInfo

func (m *NpcSearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NpcSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *NpcSearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *NpcSearchRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *NpcSearchRequest) GetOrderDesc() bool {
	if m != nil {
		return m.OrderDesc
	}
	return false
}

type NpcSearchResponse struct {
	Npcs                 []*Npc   `protobuf:"bytes,1,rep,name=Npcs,proto3" json:"Npcs,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Total                int64    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	OrderBy              string   `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDesc            bool     `protobuf:"varint,6,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcSearchResponse) Reset()         { *m = NpcSearchResponse{} }
func (m *NpcSearchResponse) String() string { return proto.CompactTextString(m) }
func (*NpcSearchResponse) ProtoMessage()    {}
func (*NpcSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{2}
}

func (m *NpcSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcSearchResponse.Unmarshal(m, b)
}
func (m *NpcSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcSearchResponse.Marshal(b, m, deterministic)
}
func (m *NpcSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcSearchResponse.Merge(m, src)
}
func (m *NpcSearchResponse) XXX_Size() int {
	return xxx_messageInfo_NpcSearchResponse.Size(m)
}
func (m *NpcSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcSearchResponse proto.InternalMessageInfo

func (m *NpcSearchResponse) GetNpcs() []*Npc {
	if m != nil {
		return m.Npcs
	}
	return nil
}

func (m *NpcSearchResponse) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *NpcSearchResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *NpcSearchResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *NpcSearchResponse) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *NpcSearchResponse) GetOrderDesc() bool {
	if m != nil {
		return m.OrderDesc
	}
	return false
}

type NpcCreateRequest struct {
	Npc                  *Npc     `protobuf:"bytes,1,opt,name=npc,proto3" json:"npc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcCreateRequest) Reset()         { *m = NpcCreateRequest{} }
func (m *NpcCreateRequest) String() string { return proto.CompactTextString(m) }
func (*NpcCreateRequest) ProtoMessage()    {}
func (*NpcCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{3}
}

func (m *NpcCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcCreateRequest.Unmarshal(m, b)
}
func (m *NpcCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcCreateRequest.Marshal(b, m, deterministic)
}
func (m *NpcCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcCreateRequest.Merge(m, src)
}
func (m *NpcCreateRequest) XXX_Size() int {
	return xxx_messageInfo_NpcCreateRequest.Size(m)
}
func (m *NpcCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcCreateRequest proto.InternalMessageInfo

func (m *NpcCreateRequest) GetNpc() *Npc {
	if m != nil {
		return m.Npc
	}
	return nil
}

type NpcCreateResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcCreateResponse) Reset()         { *m = NpcCreateResponse{} }
func (m *NpcCreateResponse) String() string { return proto.CompactTextString(m) }
func (*NpcCreateResponse) ProtoMessage()    {}
func (*NpcCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{4}
}

func (m *NpcCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcCreateResponse.Unmarshal(m, b)
}
func (m *NpcCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcCreateResponse.Marshal(b, m, deterministic)
}
func (m *NpcCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcCreateResponse.Merge(m, src)
}
func (m *NpcCreateResponse) XXX_Size() int {
	return xxx_messageInfo_NpcCreateResponse.Size(m)
}
func (m *NpcCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcCreateResponse proto.InternalMessageInfo

func (m *NpcCreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NpcReadRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcReadRequest) Reset()         { *m = NpcReadRequest{} }
func (m *NpcReadRequest) String() string { return proto.CompactTextString(m) }
func (*NpcReadRequest) ProtoMessage()    {}
func (*NpcReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{5}
}

func (m *NpcReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcReadRequest.Unmarshal(m, b)
}
func (m *NpcReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcReadRequest.Marshal(b, m, deterministic)
}
func (m *NpcReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcReadRequest.Merge(m, src)
}
func (m *NpcReadRequest) XXX_Size() int {
	return xxx_messageInfo_NpcReadRequest.Size(m)
}
func (m *NpcReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcReadRequest proto.InternalMessageInfo

func (m *NpcReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NpcReadResponse struct {
	Npc                  *Npc     `protobuf:"bytes,1,opt,name=npc,proto3" json:"npc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcReadResponse) Reset()         { *m = NpcReadResponse{} }
func (m *NpcReadResponse) String() string { return proto.CompactTextString(m) }
func (*NpcReadResponse) ProtoMessage()    {}
func (*NpcReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{6}
}

func (m *NpcReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcReadResponse.Unmarshal(m, b)
}
func (m *NpcReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcReadResponse.Marshal(b, m, deterministic)
}
func (m *NpcReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcReadResponse.Merge(m, src)
}
func (m *NpcReadResponse) XXX_Size() int {
	return xxx_messageInfo_NpcReadResponse.Size(m)
}
func (m *NpcReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcReadResponse proto.InternalMessageInfo

func (m *NpcReadResponse) GetNpc() *Npc {
	if m != nil {
		return m.Npc
	}
	return nil
}

type NpcUpdateRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Npc                  *Npc     `protobuf:"bytes,2,opt,name=npc,proto3" json:"npc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcUpdateRequest) Reset()         { *m = NpcUpdateRequest{} }
func (m *NpcUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*NpcUpdateRequest) ProtoMessage()    {}
func (*NpcUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{7}
}

func (m *NpcUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcUpdateRequest.Unmarshal(m, b)
}
func (m *NpcUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcUpdateRequest.Marshal(b, m, deterministic)
}
func (m *NpcUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcUpdateRequest.Merge(m, src)
}
func (m *NpcUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_NpcUpdateRequest.Size(m)
}
func (m *NpcUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcUpdateRequest proto.InternalMessageInfo

func (m *NpcUpdateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NpcUpdateRequest) GetNpc() *Npc {
	if m != nil {
		return m.Npc
	}
	return nil
}

type NpcUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcUpdateResponse) Reset()         { *m = NpcUpdateResponse{} }
func (m *NpcUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*NpcUpdateResponse) ProtoMessage()    {}
func (*NpcUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{8}
}

func (m *NpcUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcUpdateResponse.Unmarshal(m, b)
}
func (m *NpcUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcUpdateResponse.Marshal(b, m, deterministic)
}
func (m *NpcUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcUpdateResponse.Merge(m, src)
}
func (m *NpcUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_NpcUpdateResponse.Size(m)
}
func (m *NpcUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcUpdateResponse proto.InternalMessageInfo

type NpcDeleteRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcDeleteRequest) Reset()         { *m = NpcDeleteRequest{} }
func (m *NpcDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*NpcDeleteRequest) ProtoMessage()    {}
func (*NpcDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{9}
}

func (m *NpcDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcDeleteRequest.Unmarshal(m, b)
}
func (m *NpcDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcDeleteRequest.Marshal(b, m, deterministic)
}
func (m *NpcDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcDeleteRequest.Merge(m, src)
}
func (m *NpcDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_NpcDeleteRequest.Size(m)
}
func (m *NpcDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcDeleteRequest proto.InternalMessageInfo

func (m *NpcDeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NpcDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcDeleteResponse) Reset()         { *m = NpcDeleteResponse{} }
func (m *NpcDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*NpcDeleteResponse) ProtoMessage()    {}
func (*NpcDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{10}
}

func (m *NpcDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcDeleteResponse.Unmarshal(m, b)
}
func (m *NpcDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcDeleteResponse.Marshal(b, m, deterministic)
}
func (m *NpcDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcDeleteResponse.Merge(m, src)
}
func (m *NpcDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_NpcDeleteResponse.Size(m)
}
func (m *NpcDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcDeleteResponse proto.InternalMessageInfo

type NpcPatchRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcPatchRequest) Reset()         { *m = NpcPatchRequest{} }
func (m *NpcPatchRequest) String() string { return proto.CompactTextString(m) }
func (*NpcPatchRequest) ProtoMessage()    {}
func (*NpcPatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{11}
}

func (m *NpcPatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcPatchRequest.Unmarshal(m, b)
}
func (m *NpcPatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcPatchRequest.Marshal(b, m, deterministic)
}
func (m *NpcPatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcPatchRequest.Merge(m, src)
}
func (m *NpcPatchRequest) XXX_Size() int {
	return xxx_messageInfo_NpcPatchRequest.Size(m)
}
func (m *NpcPatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcPatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NpcPatchRequest proto.InternalMessageInfo

func (m *NpcPatchRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NpcPatchRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NpcPatchRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type NpcPatchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NpcPatchResponse) Reset()         { *m = NpcPatchResponse{} }
func (m *NpcPatchResponse) String() string { return proto.CompactTextString(m) }
func (*NpcPatchResponse) ProtoMessage()    {}
func (*NpcPatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bbb853b0b6857c4, []int{12}
}

func (m *NpcPatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NpcPatchResponse.Unmarshal(m, b)
}
func (m *NpcPatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NpcPatchResponse.Marshal(b, m, deterministic)
}
func (m *NpcPatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NpcPatchResponse.Merge(m, src)
}
func (m *NpcPatchResponse) XXX_Size() int {
	return xxx_messageInfo_NpcPatchResponse.Size(m)
}
func (m *NpcPatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NpcPatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NpcPatchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Npc)(nil), "pb.Npc")
	proto.RegisterType((*NpcSearchRequest)(nil), "pb.NpcSearchRequest")
	proto.RegisterType((*NpcSearchResponse)(nil), "pb.NpcSearchResponse")
	proto.RegisterType((*NpcCreateRequest)(nil), "pb.NpcCreateRequest")
	proto.RegisterType((*NpcCreateResponse)(nil), "pb.NpcCreateResponse")
	proto.RegisterType((*NpcReadRequest)(nil), "pb.NpcReadRequest")
	proto.RegisterType((*NpcReadResponse)(nil), "pb.NpcReadResponse")
	proto.RegisterType((*NpcUpdateRequest)(nil), "pb.NpcUpdateRequest")
	proto.RegisterType((*NpcUpdateResponse)(nil), "pb.NpcUpdateResponse")
	proto.RegisterType((*NpcDeleteRequest)(nil), "pb.NpcDeleteRequest")
	proto.RegisterType((*NpcDeleteResponse)(nil), "pb.NpcDeleteResponse")
	proto.RegisterType((*NpcPatchRequest)(nil), "pb.NpcPatchRequest")
	proto.RegisterType((*NpcPatchResponse)(nil), "pb.NpcPatchResponse")
}

func init() { proto.RegisterFile("pb/npc.proto", fileDescriptor_2bbb853b0b6857c4) }

var fileDescriptor_2bbb853b0b6857c4 = []byte{
	// 1878 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x98, 0xeb, 0x76, 0x1b, 0xb7,
	0x11, 0x80, 0x8f, 0x6e, 0xb6, 0x04, 0xdb, 0xb2, 0xb3, 0x76, 0x53, 0xd8, 0xb1, 0x13, 0x95, 0x71,
	0x53, 0x35, 0x75, 0xa4, 0x44, 0xe9, 0xbd, 0x4d, 0x5b, 0x89, 0x6b, 0x59, 0x6c, 0x25, 0x55, 0x59,
	0x4a, 0x71, 0xef, 0x2e, 0xb8, 0x3b, 0xa2, 0x50, 0x81, 0xc0, 0x1a, 0x0b, 0x4a, 0x62, 0x1f, 0xa2,
	0x8f, 0xd2, 0x97, 0xe8, 0x8b, 0xf5, 0xcc, 0x0c, 0x96, 0x5c, 0x52, 0xaa, 0xcf, 0xe9, 0xbf, 0x9d,
	0x6f, 0x06, 0x83, 0xc1, 0x60, 0x30, 0x04, 0x28, 0xee, 0x96, 0xbd, 0x4d, 0x5b, 0xe6, 0x1b, 0xa5,
	0x77, 0xc1, 0x25, 0xf3, 0x65, 0xef, 0xc9, 0xd3, 0xbe, 0x73, 0x7d, 0x03, 0x9b, 0xaa, 0xd4, 0x9b,
	0xca, 0x5a, 0x17, 0x54, 0xd0, 0xce, 0x56, 0x6c, 0xf1, 0xe4, 0x5e, 0xd9, 0xdb, 0xf4, 0x2a, 0x87,
	0x28, 0xae, 0x96, 0xbd, 0xcd, 0xdc, 0xa8, 0x2a, 0xaa, 0x5b, 0xff, 0x79, 0x26, 0x16, 0x0e, 0xcb,
	0x3c, 0x59, 0x15, 0xf3, 0x9d, 0x54, 0xce, 0xad, 0xcd, 0xad, 0x2f, 0x64, 0xf3, 0x9d, 0x34, 0x49,
	0xc4, 0xe2, 0xa1, 0x1a, 0x80, 0x9c, 0x5f, 0x9b, 0x5b, 0x5f, 0xc9, 0xe8, 0x3b, 0x79, 0x22, 0x96,
	0xf7, 0x55, 0x15, 0x88, 0x2f, 0x10, 0x1f, 0xcb, 0xc9, 0x23, 0xb1, 0xb4, 0x0f, 0x17, 0x60, 0xe4,
	0x22, 0xb9, 0x60, 0x21, 0x79, 0x5f, 0xdc, 0xca, 0x54, 0x0e, 0x9d, 0x54, 0x2e, 0x11, 0x8e, 0x52,
	0x22, 0xc5, 0xed, 0x36, 0x06, 0xd1, 0x49, 0xe5, 0x2d, 0x52, 0xd4, 0x62, 0xf2, 0xa1, 0x10, 0x3b,
	0xae, 0x18, 0x1d, 0x8f, 0x4a, 0x1c, 0x75, 0x9b, 0x94, 0x0d, 0x92, 0x3c, 0x15, 0x2b, 0x7b, 0x3a,
	0x94, 0x4e, 0xdb, 0x50, 0xc9, 0x65, 0x52, 0x4f, 0x00, 0x46, 0x7d, 0xa0, 0xac, 0x92, 0x2b, 0xa4,
	0xa0, 0x6f, 0x8c, 0xe1, 0x15, 0xd8, 0x02, 0xbc, 0x14, 0x1c, 0x03, 0x4b, 0x18, 0xc3, 0x31, 0x5c,
	0x85, 0xa1, 0x07, 0x79, 0x87, 0x63, 0x88, 0x62, 0xb2, 0x26, 0xee, 0xec, 0x81, 0x19, 0xd4, 0xda,
	0xbb, 0xa4, 0x6d, 0xa2, 0x64, 0x5d, 0xdc, 0xdf, 0x03, 0xef, 0xaa, 0x5d, 0xe7, 0xfb, 0x70, 0xe0,
	0x0a, 0x30, 0xf2, 0x1e, 0x59, 0xcd, 0x62, 0x8c, 0xa8, 0xab, 0xff, 0x09, 0x72, 0x75, 0x6d, 0x6e,
	0x7d, 0x3e, 0xa3, 0x6f, 0xf2, 0x5f, 0x66, 0xd0, 0x07, 0x9b, 0xa9, 0x00, 0xf2, 0x7e, 0xf4, 0x3f,
	0x41, 0xc9, 0x73, 0x71, 0x0f, 0x63, 0x9f, 0xd8, 0x3c, 0x20, 0x9b, 0x69, 0x88, 0x2b, 0xdb, 0x77,
	0x2e, 0x74, 0x52, 0xf9, 0x1e, 0xaf, 0x8c, 0x25, 0xcc, 0xe1, 0x01, 0xf8, 0xfc, 0x4c, 0x59, 0xd4,
	0x25, 0x9c, 0xc3, 0x09, 0x41, 0xef, 0xdb, 0x26, 0xb4, 0x87, 0xde, 0x83, 0xcd, 0x47, 0x9d, 0x54,
	0x3e, 0x64, 0xef, 0x53, 0x10, 0xa3, 0x3c, 0x2c, 0xf3, 0x6e, 0x09, 0xc6, 0xe0, 0x3e, 0x3d, 0xe2,
	0x28, 0x1b, 0x28, 0xd9, 0x10, 0xc9, 0x58, 0x7c, 0x79, 0x7a, 0x0a, 0x79, 0x40, 0xc3, 0x6f, 0x91,
	0xe1, 0x0d, 0x9a, 0xa4, 0x25, 0xee, 0x1e, 0x96, 0xf9, 0xae, 0xca, 0xb1, 0x3e, 0x3b, 0xa9, 0x7c,
	0x9f, 0x2c, 0xa7, 0x58, 0xf2, 0xb9, 0x78, 0xb8, 0x5d, 0x5c, 0x80, 0xc5, 0x34, 0x1f, 0xc3, 0xa0,
	0x34, 0x2a, 0x60, 0x21, 0x7c, 0x9b, 0x4c, 0x6f, 0x52, 0xa1, 0xd7, 0x63, 0xaf, 0xca, 0x9a, 0x48,
	0xc9, 0x5e, 0x9b, 0x8c, 0xf2, 0xa9, 0xad, 0xb6, 0xc3, 0x41, 0xaa, 0x06, 0xaa, 0x0f, 0xf2, 0x71,
	0xcc, 0x67, 0x13, 0x72, 0xd6, 0xaf, 0xf4, 0x60, 0x6c, 0xf5, 0xa4, 0xce, 0x7a, 0x03, 0x62, 0x5e,
	0xb6, 0x43, 0x50, 0xf9, 0x79, 0xdb, 0x0d, 0x6d, 0x90, 0x1f, 0x70, 0x5e, 0x1a, 0x28, 0x79, 0x21,
	0xde, 0xe3, 0xd5, 0xe7, 0x5a, 0x19, 0x56, 0x54, 0xf2, 0x29, 0x1d, 0x98, 0xeb, 0x0a, 0x5c, 0x71,
	0x4d, 0x7a, 0xda, 0xe8, 0xa0, 0xa1, 0xca, 0xd4, 0xa5, 0x7c, 0x46, 0xf6, 0x37, 0xa9, 0x28, 0x82,
	0x7e, 0xdf, 0xbb, 0x4c, 0x15, 0x7a, 0x58, 0xc9, 0x0f, 0x63, 0x04, 0x13, 0x84, 0x39, 0xd9, 0xae,
	0x2a, 0x5d, 0x85, 0x68, 0xf2, 0x11, 0xe7, 0xa4, 0xc9, 0xb0, 0x32, 0x77, 0x55, 0x0e, 0x72, 0x8d,
	0xcf, 0x0a, 0x7e, 0x63, 0x5d, 0xef, 0x0f, 0x73, 0xa3, 0xed, 0x9e, 0xd2, 0xbe, 0x1b, 0x46, 0x06,
	0xe4, 0x77, 0xb8, 0xae, 0x67, 0xf0, 0xb4, 0x65, 0xdb, 0x19, 0xe7, 0x65, 0x6b, 0xd6, 0x92, 0x70,
	0xf2, 0x89, 0x58, 0x65, 0xf4, 0x72, 0x04, 0x6c, 0xf8, 0x31, 0x19, 0xce, 0xd0, 0x89, 0xc7, 0x9a,
	0x6c, 0xc9, 0xe7, 0x4d, 0x8f, 0x63, 0x9c, 0x7c, 0x2a, 0x1e, 0x30, 0xda, 0x01, 0xe5, 0x0b, 0xf6,
	0xf9, 0x5d, 0x32, 0xbd, 0xc6, 0x31, 0x57, 0x0d, 0x26, 0x3f, 0xe1, 0x5c, 0x35, 0x10, 0xce, 0x9b,
	0x7a, 0x75, 0x7e, 0xae, 0xed, 0x1e, 0x78, 0x1d, 0x70, 0xdf, 0xbf, 0xc7, 0xf3, 0xce, 0x60, 0xac,
	0x8f, 0x88, 0x8e, 0x55, 0x08, 0xce, 0xc9, 0x75, 0xae, 0x8f, 0x29, 0x88, 0xeb, 0x8d, 0x20, 0x85,
	0xa0, 0xb4, 0xa9, 0xe4, 0xf7, 0x79, 0xbd, 0xd3, 0x94, 0x76, 0xd1, 0x0f, 0x9c, 0x3f, 0xd6, 0x74,
	0x4c, 0x3f, 0x8d, 0xbb, 0x38, 0x41, 0xb4, 0x8b, 0xb5, 0x98, 0x41, 0x21, 0x7f, 0x10, 0x77, 0xb1,
	0xc1, 0x70, 0xb6, 0xb1, 0xfc, 0xca, 0x03, 0x58, 0xf9, 0x82, 0x67, 0x9b, 0xa6, 0x74, 0xe6, 0x6b,
	0xb2, 0x63, 0x86, 0x20, 0x3f, 0x8b, 0x67, 0xbe, 0x09, 0x29, 0xf6, 0x03, 0x30, 0x00, 0xb1, 0xd1,
	0x7d, 0x21, 0x37, 0x62, 0xec, 0x53, 0xf4, 0x9a, 0xdd, 0x96, 0xdc, 0xbc, 0xc1, 0x6e, 0x0b, 0x3b,
	0xd1, 0xf6, 0x60, 0xe0, 0x3a, 0xe9, 0xae, 0x36, 0x20, 0x3f, 0xa7, 0x92, 0x6e, 0x10, 0xec, 0x20,
	0x47, 0x5e, 0x0f, 0x94, 0x1f, 0xf1, 0x38, 0xee, 0xfa, 0x5f, 0x70, 0x07, 0xb9, 0xae, 0x49, 0xb6,
	0xc4, 0xa3, 0x2e, 0xe4, 0xce, 0x16, 0x33, 0x23, 0xb6, 0x68, 0xc4, 0x8d, 0x3a, 0xcc, 0x62, 0xa6,
	0x6c, 0x1f, 0x8a, 0x68, 0xfb, 0x25, 0x67, 0xb1, 0xc9, 0xf0, 0x97, 0x2d, 0x1b, 0xda, 0xaa, 0x04,
	0x28, 0xe4, 0x0f, 0xa9, 0x53, 0x8f, 0x65, 0xac, 0x8f, 0x03, 0xd5, 0xd7, 0x79, 0x06, 0x78, 0x78,
	0x94, 0xcd, 0x41, 0xfe, 0x88, 0xeb, 0x63, 0x06, 0x63, 0x56, 0xda, 0xce, 0x14, 0x0d, 0xc3, 0x1f,
	0x73, 0x56, 0xa6, 0x29, 0xf6, 0x87, 0x54, 0x57, 0xa0, 0x2a, 0x68, 0x98, 0xfe, 0x84, 0x4c, 0xaf,
	0x2b, 0xd0, 0xeb, 0xae, 0xf6, 0x4d, 0xd3, 0x9f, 0xb2, 0xd7, 0x69, 0x8a, 0xa7, 0xe2, 0xc8, 0xe9,
	0xca, 0xd9, 0x86, 0xe5, 0xcf, 0xf8, 0x54, 0xcc, 0x72, 0xcc, 0x63, 0xdb, 0x79, 0x3f, 0x2c, 0xb1,
	0xeb, 0x36, 0xec, 0x7f, 0xce, 0x79, 0xbc, 0x49, 0x47, 0x7b, 0x75, 0x36, 0xaa, 0x74, 0xae, 0x4c,
	0x63, 0xc4, 0x2f, 0xe2, 0x5e, 0x5d, 0xd3, 0x60, 0xde, 0xbb, 0x00, 0x1d, 0x7b, 0xa1, 0x2b, 0xdd,
	0x33, 0x20, 0x7f, 0xc9, 0x79, 0x6f, 0x32, 0xf4, 0xd9, 0x94, 0x4f, 0x6c, 0x01, 0xaa, 0x90, 0x5f,
	0xb1, 0xcf, 0xeb, 0x1a, 0x3c, 0x33, 0x5f, 0x0f, 0xa1, 0x0a, 0xaf, 0x8c, 0xeb, 0x29, 0x23, 0x7f,
	0xc5, 0x67, 0xa6, 0x81, 0xa8, 0xe2, 0xb0, 0xa4, 0xe9, 0x3e, 0x21, 0x7f, 0xcd, 0xbf, 0x7d, 0x13,
	0x82, 0x3b, 0x7d, 0x58, 0xe6, 0xd4, 0x2b, 0xe5, 0x6f, 0x48, 0x3b, 0x96, 0x71, 0x6c, 0xb7, 0x54,
	0x97, 0x76, 0x5f, 0x0f, 0x74, 0x90, 0xdb, 0x3c, 0x76, 0x42, 0x26, 0x9d, 0xbf, 0x4b, 0x85, 0xb2,
	0x43, 0x85, 0xd2, 0x44, 0x13, 0x8b, 0x14, 0x8c, 0x1a, 0xc9, 0x76, 0xf3, 0xb7, 0x81, 0x10, 0xce,
	0xbf, 0xab, 0x6d, 0xa1, 0x30, 0x23, 0x29, 0xcf, 0x5f, 0xcb, 0xa8, 0xeb, 0x06, 0x0f, 0xb6, 0x1f,
	0xce, 0xe4, 0x4b, 0xd6, 0xd5, 0x32, 0xde, 0x56, 0xba, 0x41, 0x0d, 0xb4, 0x55, 0x72, 0x97, 0x6f,
	0x2b, 0x51, 0xc4, 0x1b, 0x51, 0x0a, 0x57, 0x01, 0x9b, 0xd4, 0x48, 0xbe, 0xe2, 0x1b, 0xd1, 0x18,
	0xe0, 0xb8, 0xed, 0x3e, 0xfe, 0x76, 0x8c, 0xe4, 0x1e, 0x8f, 0x8b, 0x22, 0xee, 0x4f, 0xc7, 0x06,
	0x30, 0x46, 0xf7, 0x01, 0x77, 0xb2, 0xc3, 0xfb, 0xd3, 0x64, 0x78, 0xc3, 0x78, 0xad, 0xab, 0xc2,
	0x0d, 0xe4, 0x6f, 0xf9, 0x86, 0xc1, 0x12, 0x46, 0xda, 0x3e, 0x53, 0x5e, 0x57, 0x03, 0x25, 0x7f,
	0xc7, 0x91, 0xd6, 0x32, 0x45, 0x0a, 0xb0, 0xa7, 0x0b, 0x90, 0xfb, 0x31, 0x52, 0x16, 0xf1, 0x24,
	0xe1, 0x9e, 0x0e, 0x4a, 0xef, 0x2e, 0xa0, 0x20, 0x8b, 0x03, 0x3e, 0x49, 0x33, 0x18, 0xd7, 0x74,
	0xec, 0x55, 0x7e, 0x4e, 0x69, 0x3a, 0xe4, 0x35, 0x8d, 0x01, 0xde, 0x35, 0x3b, 0xd5, 0x8e, 0x0b,
	0xf2, 0xf7, 0x7c, 0xd7, 0x24, 0x01, 0xe7, 0x7d, 0x79, 0x95, 0x9b, 0x61, 0x01, 0xf2, 0x88, 0xe7,
	0x8d, 0x22, 0xae, 0x82, 0xb7, 0x40, 0x7e, 0xcd, 0xab, 0x60, 0x09, 0x57, 0xb1, 0x9d, 0xe7, 0x43,
	0xaf, 0xf2, 0x91, 0xcc, 0x78, 0x15, 0xb5, 0x8c, 0x11, 0x6c, 0x5f, 0x38, 0x5d, 0x50, 0x91, 0x77,
	0x39, 0x82, 0x31, 0xc0, 0x33, 0xd9, 0x35, 0xee, 0xf2, 0x40, 0x07, 0xdd, 0xa7, 0xdb, 0xb6, 0x3c,
	0xe6, 0x33, 0x39, 0x4d, 0x31, 0xa6, 0x6f, 0xc0, 0x57, 0x68, 0x70, 0xc2, 0x31, 0x45, 0x11, 0xe7,
	0x3e, 0x50, 0x57, 0x7c, 0x65, 0xfe, 0x86, 0xe7, 0xae, 0x65, 0x9c, 0xbb, 0x9b, 0x2b, 0x03, 0x74,
	0xf3, 0x7b, 0xcd, 0x73, 0x8f, 0x01, 0x76, 0xf2, 0x23, 0xaf, 0x2f, 0x54, 0x80, 0xb6, 0xf3, 0x65,
	0x05, 0xf2, 0x0f, 0xdc, 0xc9, 0xa7, 0x20, 0xf6, 0x98, 0x13, 0xab, 0xdf, 0x0e, 0x81, 0xea, 0x77,
	0x67, 0x44, 0x97, 0xf6, 0x3f, 0x72, 0x8f, 0xb9, 0xa6, 0xc0, 0xca, 0xc7, 0x13, 0xe6, 0x2f, 0x55,
	0x00, 0x2f, 0xff, 0xc4, 0x95, 0x3f, 0x21, 0xb8, 0x8e, 0x4e, 0x45, 0xc7, 0x4c, 0xfe, 0x99, 0xd7,
	0x11, 0x45, 0xca, 0xfa, 0xc0, 0xd1, 0x1d, 0xed, 0x2f, 0x31, 0xeb, 0x2c, 0xf2, 0x69, 0x02, 0x63,
	0x28, 0x72, 0xf9, 0x57, 0x3a, 0x2c, 0x0d, 0x42, 0x37, 0x79, 0x50, 0x51, 0xfd, 0x37, 0x52, 0x4f,
	0x00, 0x66, 0xf8, 0xd0, 0x1d, 0x2b, 0xdf, 0x87, 0xb0, 0xe7, 0xc2, 0x39, 0x8c, 0xe4, 0x1b, 0xce,
	0xf0, 0x34, 0xc5, 0x59, 0x32, 0xa5, 0x0b, 0x66, 0xf2, 0xef, 0x1c, 0xf9, 0x84, 0xc4, 0x7e, 0x50,
	0x5f, 0xe5, 0xd5, 0xb8, 0x1f, 0xd4, 0x37, 0xf9, 0xe7, 0xe2, 0xde, 0x0e, 0x3e, 0x8f, 0x7c, 0x6d,
	0xd2, 0xe3, 0x6c, 0x4e, 0x41, 0xba, 0xb1, 0x2b, 0x5b, 0xd4, 0x36, 0x79, 0xbc, 0xb1, 0x4f, 0x10,
	0xce, 0xb3, 0x0f, 0xfd, 0xda, 0xa0, 0xe0, 0x79, 0x26, 0x04, 0x3d, 0xec, 0x02, 0x84, 0xda, 0x00,
	0xd8, 0x43, 0x03, 0xd1, 0x0b, 0x4a, 0xf7, 0xcf, 0x82, 0x3c, 0x8d, 0x2f, 0x28, 0x14, 0x30, 0x4b,
	0xaf, 0x95, 0x89, 0x1d, 0xa7, 0xcf, 0xb5, 0x30, 0x06, 0x38, 0xe6, 0x08, 0xde, 0x76, 0x52, 0x79,
	0xc6, 0x63, 0x48, 0xc0, 0x7a, 0xe7, 0x2d, 0x96, 0x9a, 0xeb, 0x9d, 0x25, 0xb4, 0xde, 0xd5, 0x57,
	0x50, 0xc8, 0x7f, 0xb0, 0x35, 0x09, 0x98, 0x81, 0x4e, 0xdf, 0x3a, 0x0f, 0x29, 0x54, 0x58, 0x12,
	0xf2, 0x9c, 0x33, 0x30, 0x05, 0xa9, 0x37, 0x9d, 0xb9, 0x4b, 0x2a, 0x23, 0x13, 0x7b, 0x53, 0x94,
	0xb1, 0x93, 0x9c, 0xd8, 0x40, 0xf9, 0xa6, 0x03, 0x3b, 0xe0, 0x4e, 0xd2, 0x64, 0xc9, 0x53, 0xb1,
	0x88, 0x19, 0x95, 0x76, 0x6d, 0x6e, 0xfd, 0xce, 0xd6, 0xf2, 0x46, 0xd9, 0xdb, 0xc0, 0xb7, 0x60,
	0x46, 0x34, 0xf9, 0x48, 0x2c, 0xd1, 0xa3, 0x54, 0x3a, 0x52, 0xaf, 0xa0, 0x9a, 0xfa, 0x75, 0xc6,
	0x3c, 0x79, 0x26, 0x44, 0x6e, 0x40, 0xd9, 0x37, 0x16, 0x03, 0x28, 0xe9, 0x22, 0xb1, 0x42, 0x04,
	0x23, 0x68, 0xfd, 0x6b, 0x4e, 0x3c, 0xc0, 0x9b, 0x35, 0x28, 0x9f, 0x9f, 0x65, 0xf0, 0x96, 0x4a,
	0x33, 0x11, 0x8b, 0x64, 0x3d, 0xc7, 0x4f, 0x58, 0x1b, 0x9f, 0xa9, 0x86, 0xba, 0xfb, 0x3c, 0xa7,
	0x80, 0x04, 0x4c, 0x98, 0x3b, 0x3d, 0xad, 0x20, 0xd0, 0xb3, 0x76, 0x21, 0x8b, 0x52, 0xf2, 0x58,
	0x2c, 0x3b, 0x5f, 0x80, 0x7f, 0xd3, 0x1b, 0xd1, 0xbb, 0x76, 0x25, 0xbb, 0x4d, 0xf2, 0xce, 0x08,
	0x03, 0x62, 0x55, 0x01, 0x55, 0x4e, 0xaf, 0xdb, 0xe5, 0x6c, 0x85, 0x48, 0x0a, 0x55, 0xde, 0xfa,
	0xf7, 0x1c, 0xbf, 0x01, 0x62, 0x40, 0x55, 0xe9, 0x6c, 0x05, 0xc9, 0x07, 0x62, 0xf1, 0xb0, 0xcc,
	0x2b, 0x39, 0xb7, 0xb6, 0xb0, 0x7e, 0x67, 0xeb, 0x36, 0xae, 0xf2, 0xb0, 0xcc, 0x33, 0x82, 0xff,
	0x67, 0x68, 0x8f, 0xc4, 0x52, 0x70, 0x41, 0x8d, 0xdf, 0xdb, 0x24, 0x4c, 0x05, 0xbc, 0xf4, 0xae,
	0x80, 0x6f, 0xcd, 0x06, 0xfc, 0x19, 0x25, 0xb0, 0xed, 0x41, 0x05, 0xa8, 0x13, 0xf8, 0x58, 0x2c,
	0xd8, 0x32, 0xa7, 0xfc, 0x35, 0xa2, 0x45, 0xd6, 0xfa, 0x98, 0x96, 0x57, 0x9b, 0xc7, 0xe5, 0xad,
	0x8a, 0x79, 0x5d, 0xd4, 0xff, 0x21, 0xe8, 0xa2, 0xb5, 0x26, 0x56, 0x71, 0x00, 0xa8, 0xa2, 0xf6,
	0x38, 0x6b, 0xf1, 0x42, 0xdc, 0x1f, 0x5b, 0x44, 0x27, 0xef, 0x98, 0xf4, 0x2b, 0x8a, 0xf1, 0xa4,
	0x2c, 0x1a, 0x31, 0xce, 0x78, 0xac, 0x87, 0xcf, 0xdf, 0x30, 0xfc, 0x21, 0xc5, 0x5c, 0x0f, 0xe7,
	0xe9, 0x5a, 0x2d, 0xf2, 0x99, 0x82, 0x81, 0xff, 0xe9, 0x33, 0x0e, 0xac, 0x6d, 0xe2, 0xc0, 0x0e,
	0x85, 0x7e, 0xa4, 0xc2, 0xa4, 0xe0, 0x66, 0x63, 0x79, 0x20, 0x16, 0xb0, 0x71, 0xf1, 0x5f, 0x28,
	0xf8, 0x89, 0xbb, 0x76, 0xa1, 0xf0, 0xf6, 0xcd, 0x7f, 0x9f, 0xb0, 0xd0, 0x4a, 0x28, 0x86, 0xe8,
	0x8a, 0xdd, 0xf7, 0x6e, 0xd1, 0xdf, 0x33, 0x5f, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x0c,
	0x01, 0xf6, 0xef, 0x11, 0x00, 0x00,
}
